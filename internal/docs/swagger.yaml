definitions:
  dto.CreateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  dto.LoginUserRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 72
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  dto.LoginUserResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/dto.UserResponse'
    type: object
  dto.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user with email and password, returning a JWT and
        user details upon success.
      parameters:
      - description: User login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/dto.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged in
          schema:
            $ref: '#/definitions/dto.LoginUserResponse'
        "400":
          description: Bad request (e.g., malformed JSON)
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable entity (validation error)
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Log in a user
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account with the provided details.
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully registered user
          schema:
            $ref: '#/definitions/dto.UserResponse'
        "400":
          description: Bad request (e.g., malformed JSON)
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict (user already exists)
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable entity (validation error)
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Auth
  /users/{id}:
    get:
      description: Retrieves the details of a user by their ID.
      parameters:
      - description: User ID (UUID format)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user details
          schema:
            $ref: '#/definitions/dto.UserResponse'
        "400":
          description: Invalid user ID format
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized (e.g., invalid API key)
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - APIKey: []
      summary: Get user details by ID
      tags:
      - Users
  /users/me:
    get:
      description: Retrieves the details of the currently authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user details
          schema:
            $ref: '#/definitions/dto.UserResponse'
        "401":
          description: Unauthorized (e.g., no user in context, invalid token)
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Get current user's details
      tags:
      - Users
swagger: "2.0"
